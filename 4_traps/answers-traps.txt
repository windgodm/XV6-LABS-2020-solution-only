## RISC-V assembly


Q：哪些寄存器包含函数的参数？例如，在main调用`printf`时，哪个寄存器保存13？

A：a0~a7；a2保存printf的第3个参数13



Q：在main的汇编代码中对函数`f`的调用在哪里？`g`的调用在哪里？（提示:编译器可能内联函数）

A：首先是`g`的调用，在`f`中内联了`addiw   a0,a0,3`；然后是`f`的调用，在main中printf的参数里调用了`f(8)+1`优化成`li  a1,12`



Q：函数printf的地址？

A：`30h: auipc  ra,0x0; 34h: jalr  1536(ra)`，第一句`ra = PC+imm<<12 = 0x30`，jalr的跳转地址`ra+imm = 0x30+1536 = 0x630`



Q：在`main`中`jalr`到`printf`之后的寄存器`ra`中值是什么？

A：`ra = 3Eh + 4 = 42h`（ra是原pc+4，相当于返回地址）



Q：给出如下代码的输出；如果是大端序，i应该等于多少，57616需要变吗

```c
unsigned int i = 0x00646c72;
printf("H%x Wo%s", 57616, &i);
```

A：

小端序输出：`He110 World`

大端序`i=0x726c6400`；整数不需要变，因为`%x`按大端序输出



Q：下列代码`y=`后的输出是什么（注意：答案不是一个具体的值）

```c
printf("x=%d y=%d", 3);
```

这应该是一个溢出，若参数通过寄存器传递，则将泄露第三个参数对应的寄存器；若通过栈传递，则泄露栈信息；具体情况视其编译出来的结果而定
